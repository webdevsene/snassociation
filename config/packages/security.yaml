security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            # Use native password hasher, which auto-selects the best
            # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # anonymous: true
            lazy: true
            provider: app_user_provider
            # provider: database_users

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            # by default, the feature allows 5 login attempts per minute
            #login_throttling: null

            # configure the maximum login attempts (per minute)
            #login_throttling:
            #    max_attempts: 3

            # configure the maximum login attempts in a custom period of time
            login_throttling:
                max_attempts: 3
                interval: '15 minutes'

            custom_authenticator: App\Security\LoginFormAuthenticator

            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
                #target: home

            # use a custom rate limiter via its service ID
            #login_throttling:
            #    limiter: app.my_login_rate_limiter

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/home, roles: ROLE_ADMIN }
        - { path: ^/(.*)/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(.*)/association, roles: ROLE_ADMIN }
        # change '/admin' by the URL used by your Dashboard
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
